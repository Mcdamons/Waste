<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üéÆ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Waste - Gamified</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }

        .container {
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
            max-width: 600px;
            width: 100%;
            overflow: hidden;
        }

        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            text-align: center;
        }

        .header h1 {
            font-size: 24px;
            margin-bottom: 10px;
        }

        .progress-container {
            background: rgba(255,255,255,0.2);
            height: 10px;
            border-radius: 10px;
            overflow: hidden;
            margin-top: 20px;
        }

        .progress-bar {
            background: #4ade80;
            height: 100%;
            width: 11.11%;
            transition: width 0.5s ease;
            border-radius: 10px;
        }

        .progress-text {
            margin-top: 10px;
            font-size: 14px;
            opacity: 0.9;
        }

        .content {
            padding: 40px;
        }

        .question {
            display: none;
        }

        .question.active {
            display: block;
            animation: slideIn 0.5s ease;
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateX(30px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        .question-title {
            font-size: 20px;
            color: #1f2937;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .question-number {
            background: #667eea;
            color: white;
            width: 35px;
            height: 35px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            flex-shrink: 0;
        }

        .options {
            display: grid;
            gap: 12px;
        }

        .option {
            background: #f3f4f6;
            border: 2px solid transparent;
            border-radius: 12px;
            padding: 15px 20px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .option:hover {
            background: #e5e7eb;
            transform: translateX(5px);
        }

        .option.selected {
            background: #dbeafe;
            border-color: #3b82f6;
        }

        .option-radio {
            width: 20px;
            height: 20px;
            border: 2px solid #9ca3af;
            border-radius: 50%;
            position: relative;
            flex-shrink: 0;
        }

        .option.selected .option-radio {
            border-color: #3b82f6;
        }

        .option.selected .option-radio::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 10px;
            height: 10px;
            background: #3b82f6;
            border-radius: 50%;
        }

        input[type="text"],
        input[type="number"],
        textarea,
        select {
            width: 100%;
            padding: 15px;
            border: 2px solid #e5e7eb;
            border-radius: 12px;
            font-size: 16px;
            transition: all 0.3s ease;
            font-family: inherit;
        }

        input[type="text"]:focus,
        input[type="number"]:focus,
        textarea:focus,
        select:focus {
            outline: none;
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }

        textarea {
            min-height: 100px;
            resize: vertical;
        }

        .buttons {
            display: flex;
            gap: 15px;
            margin-top: 30px;
        }

        button {
            flex: 1;
            padding: 15px;
            border: none;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background: #3b82f6;
            color: white;
        }

        .btn-primary:hover:not(:disabled) {
            background: #2563eb;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(59, 130, 246, 0.3);
        }

        .btn-secondary {
            background: #e5e7eb;
            color: #374151;
        }

        .btn-secondary:hover {
            background: #d1d5db;
        }

        button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .success-screen {
            display: none;
            text-align: center;
            padding: 60px 40px;
        }

        .success-screen.active {
            display: block;
            animation: slideIn 0.5s ease;
        }

        .success-icon {
            font-size: 80px;
            margin-bottom: 20px;
            animation: bounce 1s ease;
        }

        @keyframes bounce {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-20px); }
        }

        .required {
            color: #ef4444;
            margin-left: 4px;
        }

        .helper-text {
            font-size: 14px;
            color: #6b7280;
            margin-top: 8px;
        }

        .waste-desc {
            margin-left: 32px;
            margin-top: 5px;
            font-size: 14px;
            color: #6b7280;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üéÆ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏¥‡πâ‡∏á Waste</h1>
            <p>‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏¢‡∏≤‡∏™‡∏±‡∏ï‡∏ß‡πå</p>
            <div class="progress-container">
                <div class="progress-bar" id="progressBar"></div>
            </div>
            <div class="progress-text">
                <span id="progressText">‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà 1 ‡∏à‡∏≤‡∏Å 9</span>
            </div>
        </div>

        <div class="content" id="mainContent">
            <!-- Question 1: ‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• -->
            <div class="question active" data-step="1">
                <div class="question-title">
                    <span class="question-number">1</span>
                    <span>‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• <span class="required">*</span></span>
                </div>
                <div class="options" id="nameOptions"></div>
            </div>

            <!-- Question 2: ‡∏á‡∏≤‡∏ô -->
            <div class="question" data-step="2">
                <div class="question-title">
                    <span class="question-number">2</span>
                    <span>‡∏á‡∏≤‡∏ô <span class="required">*</span></span>
                </div>
                <div class="options" id="workOptions"></div>
            </div>

            <!-- Question 3: ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó Waste -->
            <div class="question" data-step="3">
                <div class="question-title">
                    <span class="question-number">3</span>
                    <span>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á Waste <span class="required">*</span></span>
                </div>
                <div class="options" id="wasteTypeOptions"></div>
            </div>

            <!-- Question 4: ‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏•‡∏≠‡∏á -->
            <div class="question" data-step="4">
                <div class="question-title">
                    <span class="question-number">4</span>
                    <span>‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢ <span class="required">*</span></span>
                </div>
                <select id="experimentSelect">
                    <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏•‡∏≠‡∏á --</option>
                    <option value="Waste ‡∏à‡∏≤‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠">Waste ‡∏à‡∏≤‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠</option>
                    <option value="‡∏™‡∏°‡∏∏‡∏ô‡πÑ‡∏û‡∏£‡∏ü‡πâ‡∏≤‡∏ó‡∏∞‡∏•‡∏≤‡∏¢‡πÇ‡∏à‡∏£">‡∏™‡∏°‡∏∏‡∏ô‡πÑ‡∏û‡∏£‡∏ü‡πâ‡∏≤‡∏ó‡∏∞‡∏•‡∏≤‡∏¢‡πÇ‡∏à‡∏£</option>
                    <option value="‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏™‡∏°‡∏∏‡∏ô‡πÑ‡∏û‡∏£‡∏û‡∏£‡∏¥‡∏Å‡∏Ç‡∏µ‡πâ‡∏´‡∏ô‡∏π">‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏™‡∏°‡∏∏‡∏ô‡πÑ‡∏û‡∏£‡∏û‡∏£‡∏¥‡∏Å‡∏Ç‡∏µ‡πâ‡∏´‡∏ô‡∏π</option>
                    <option value="‡∏ô‡πâ‡∏≥‡∏õ‡∏ô‡πÄ‡∏õ‡∏∑‡πâ‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏õ‡∏®‡∏∏‡∏™‡∏±‡∏ï‡∏ß‡πå">‡∏ô‡πâ‡∏≥‡∏õ‡∏ô‡πÄ‡∏õ‡∏∑‡πâ‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏õ‡∏®‡∏∏‡∏™‡∏±‡∏ï‡∏ß‡πå</option>
                    <option value="‡∏´‡∏≤ density">‡∏´‡∏≤ density</option>
                    <option value="Aldehyde">Aldehyde (Glutaraldehyde, Formaldehyde ‡πÅ‡∏•‡∏∞ Glyoxal)</option>
                    <option value="Amoxicillin">Amoxicillin</option>
                    <option value="Chlorine dioxide">Chlorine dioxide</option>
                    <option value="Chlorpyrifos ,phoxim">Chlorpyrifos, phoxim</option>
                    <option value="Enrofloxacin">Enrofloxacin</option>
                    <option value="Glyoxal">Glyoxal (Acetic acid)</option>
                    <option value="Salinomycin">Salinomycin</option>
                    <option value="Sulfamethazine">Sulfamethazine</option>
                    <option value="Tiamulin">Tiamulin in medicated feeds</option>
                    <option value="Medicated feeds">Medicated feeds</option>
                    <option value="Tylosin">Tylosin</option>
                    <option value="Formaldehyde ‡πÉ‡∏ô‡∏ô‡πâ‡∏≥">Formaldehyde ‡πÉ‡∏ô‡∏ô‡πâ‡∏≥</option>
                    <option value="‡∏≠‡∏∑‡πà‡∏ô‡πÜ">‡∏≠‡∏∑‡πà‡∏ô‡πÜ (‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á)</option>
                </select>
                <input type="text" id="experimentOther" placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏≠‡∏∑‡πà‡∏ô‡πÜ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)" style="margin-top: 15px; display: none;">
            </div>

            <!-- Question 5: ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡πÄ‡∏Ñ‡∏°‡∏µ -->
            <div class="question" data-step="5">
                <div class="question-title">
                    <span class="question-number">5</span>
                    <span>‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡πÄ‡∏Ñ‡∏°‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢ <span class="required">*</span></span>
                </div>
                <input type="text" id="chemicalName" placeholder="‡πÄ‡∏ä‡πà‡∏ô Methanol, Acetone, NaCl">
                <div class="helper-text">‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡πÄ‡∏Ñ‡∏°‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö</div>
            </div>

            <!-- Question 6: ‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ï‡∏£ -->
            <div class="question" data-step="6">
                <div class="question-title">
                    <span class="question-number">6</span>
                    <span>‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ï‡∏£‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢ <span class="required">*</span></span>
                </div>
                <select id="volumeSelect">
                    <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ï‡∏£ --</option>
                </select>
            </div>

            <!-- Question 7: ‡∏£‡∏´‡∏±‡∏™‡∏†‡∏≤‡∏ä‡∏ô‡∏∞ -->
            <div class="question" data-step="7">
                <div class="question-title">
                    <span class="question-number">7</span>
                    <span>‡∏£‡∏´‡∏±‡∏™‡∏†‡∏≤‡∏ä‡∏ô‡∏∞‡∏ö‡∏£‡∏£‡∏à‡∏∏ (Bottle ID)</span>
                </div>
                <input type="text" id="bottleId" placeholder="‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å">
                <div class="helper-text">‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏â‡∏•‡∏≤‡∏Å‡πÉ‡∏´‡∏°‡πà ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ</div>
            </div>

            <!-- Question 8: ‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö -->
            <div class="question" data-step="8">
                <div class="question-title">
                    <span class="question-number">8</span>
                    <span>‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏•‡∏∞‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö <span class="required">*</span></span>
                </div>
                <div class="options" id="storageOptions"></div>
            </div>

            <!-- Question 9: ‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞ -->
            <div class="question" data-step="9">
                <div class="question-title">
                    <span class="question-number">9</span>
                    <span>‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞</span>
                </div>
                <textarea id="suggestion" placeholder="‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)"></textarea>
            </div>

            <div class="buttons">
                <button type="button" class="btn-secondary" id="prevBtn" style="display: none;">‚Üê ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö</button>
                <button type="button" class="btn-primary" id="nextBtn">‡∏ñ‡∏±‡∏î‡πÑ‡∏õ ‚Üí</button>
            </div>
        </div>

        <!-- Success Screen -->
        <div class="success-screen" id="successScreen">
            <div class="success-icon">üéâ</div>
            <h2 style="color: #1f2937; margin-bottom: 15px;">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</h2>
            <p style="color: #6b7280; margin-bottom: 30px;">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß</p>
            <button class="btn-primary" onclick="location.reload()">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á</button>
        </div>
    </div>

    <script>
        const names = ["1.‡∏ô‡∏≤‡∏á‡∏™‡∏∏‡∏ô‡∏±‡∏ô‡∏ó‡πå ‡∏Å‡∏¥‡∏ï‡∏ï‡∏¥‡∏à‡∏≤‡∏£‡∏∏‡∏ß‡∏±‡∏í‡∏ô‡∏≤","2.‡∏ô‡∏≤‡∏¢‡∏ä‡∏π‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå ‡∏≠‡∏≤‡∏à‡∏™‡∏π‡∏á‡πÄ‡∏ô‡∏¥‡∏ô","3.‡∏ô‡∏≤‡∏á‡∏à‡∏∏‡∏ë‡∏≤‡∏°‡∏≤‡∏® ‡∏õ‡∏£‡∏∞‡∏†‡∏≤‡∏û‡∏£‡∏£‡∏ì‡∏û‡∏á‡∏®‡πå","4.‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏£‡∏±‡∏á‡∏©‡∏¥‡∏¢‡∏≤ ‡∏Ñ‡∏ï‡∏¥‡∏Å‡∏≤‡∏£","5. ‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏®‡∏®‡∏¥‡∏Å‡∏≤‡∏ô‡∏ï‡πå ‡∏ß‡∏∏‡∏í‡∏¥‡∏Å‡∏≤‡∏ô‡∏ï‡πå‡∏ô‡∏ô‡∏ó‡πå","6.‡∏ô‡∏≤‡∏¢‡∏≠‡∏á‡∏≠‡∏≤‡∏à ‡∏ö‡∏∏‡∏ç‡∏ö‡∏£‡∏£‡∏•‡∏∏","7.‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏û‡∏¥‡∏ä‡∏∏‡∏ï‡∏≤ ‡∏™‡∏≤‡∏°‡∏ô‡∏à‡∏¥‡∏ï‡∏ï‡∏¥","8.‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏•‡∏†‡∏±‡∏™ ‡∏Ç‡∏≤‡∏ß‡∏à‡∏±‡∏ï‡∏∏‡∏£‡∏±‡∏™","9.‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏Ç‡∏ô‡∏¥‡∏©‡∏ê‡∏≤ ‡πÄ‡∏≠‡∏µ‡πà‡∏¢‡∏°‡∏•‡∏∞‡∏≠‡∏≠","10.‡∏ô‡∏≤‡∏¢‡∏ò‡∏¥‡∏ï‡∏¥ ‡∏£‡∏∏‡∏à‡∏¥‡πÄ‡∏ä‡∏≤‡∏ß‡πå","11.‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏û‡∏£‡∏£‡∏ì‡∏£‡∏≤‡∏¢ ‡∏™‡∏¥‡∏á‡∏´‡πå‡πÄ‡∏ñ‡∏∑‡πà‡∏≠‡∏ô","12.‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏ß‡∏£‡∏≤‡∏†‡∏£‡∏ì‡πå ‡∏†‡∏π‡∏ô‡∏≤‡πÄ‡∏´‡∏ô‡∏∑‡∏≠","13.‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏â‡∏±‡∏ï‡∏£‡∏ä‡∏ô‡∏Å ‡∏ò‡∏±‡∏ä‡∏ä‡∏±‡∏¢‡∏°‡∏á‡∏Ñ‡∏•","14.‡∏ô‡∏≤‡∏¢‡∏ò‡∏ô‡∏ò‡∏£‡∏ì‡πå ‡∏î‡πâ‡∏ß‡∏á‡∏ó‡∏≠‡∏á","15.‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡πÄ‡∏û‡∏ä‡∏£‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå ‡∏´‡∏ß‡∏ô‡∏à‡∏¥‡∏ï‡∏£","16.‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏™‡∏£‡∏±‡∏ç‡∏ç‡∏≤ ‡∏ö‡∏∏‡∏ç‡∏°‡∏µ","17.‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏à‡∏∏‡∏ë‡∏≤‡∏û‡∏£ ‡∏´‡∏á‡∏™‡πå‡∏ú‡∏≤‡∏ó‡∏≠‡∏á","18.‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏£‡∏±‡∏ï‡∏ô‡∏≤‡∏†‡∏£‡∏ì‡πå ‡∏ä‡∏ô‡∏õ‡∏£‡∏∞‡∏ä‡∏≤","19.‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏û‡∏£‡∏ò‡∏¥‡∏†‡∏≤ ‡∏ó‡∏≠‡∏á‡∏ô‡πâ‡∏≠‡∏¢","20.‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏ß‡∏ô‡∏¥‡∏î‡∏≤ ‡∏ñ‡∏•‡∏∏‡∏á‡πÄ‡∏£‡∏∑‡∏≠‡∏á","21.‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡πÄ‡∏Å‡∏©‡∏°‡∏™‡∏¥‡∏£‡∏¥ ‡πÇ‡∏Ü‡∏©‡∏∞‡∏ö‡∏î‡∏µ","22.‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏õ‡∏ô‡∏±‡∏î‡∏î‡∏≤ ‡πÄ‡∏ï‡πâ‡∏≤‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥","23.‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏≠‡∏£‡∏Å‡∏±‡∏ç‡∏ç‡∏≤ ‡∏ö‡∏∏‡∏ç‡∏°‡∏≤‡∏Å","24.‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏≠‡∏ô‡∏∏‡∏™‡∏£‡∏≤ ‡∏ó‡∏≠‡∏á‡∏ö‡∏∏‡∏ç‡∏£‡∏±‡∏ï‡∏ô‡πå","25.‡∏ô‡∏≤‡∏¢‡πÄ‡∏•‡∏¥‡∏®‡∏£‡∏ö ‡∏ö‡∏∏‡∏ç‡∏•‡πâ‡∏≠‡∏°","26.‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏à‡∏∏‡∏¨‡∏≤‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå ‡∏†‡∏±‡∏Å‡∏î‡∏µ","27.‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏®‡∏£‡∏µ‡∏õ‡∏£‡∏∞‡∏†‡∏≤ ‡∏£‡∏±‡∏Å‡∏ò‡∏£‡∏£‡∏°","28.‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏ò‡∏ô‡∏≤‡∏£‡∏±‡∏ï‡∏ô‡πå ‡∏£‡∏∑‡πà‡∏ô‡∏õ‡∏£‡∏≤‡∏ä‡∏ç‡πå","29.‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏ö‡∏∏‡∏ç‡πÅ‡∏™‡∏á ‡πÄ‡∏ß‡∏î‡∏™‡∏±‡∏ô‡πÄ‡∏ó‡∏µ‡∏¢‡∏∞","30.‡∏ô‡∏≤‡∏á‡πÅ‡∏û‡∏£‡∏™‡∏ô‡∏±‡∏ô‡∏ó‡πå ‡∏á‡∏¥‡πâ‡∏ß‡∏£‡∏≤‡∏¢"];
        
        const works = ["Assay ‡πÄ‡∏Ñ‡∏°‡∏µ","Assay ‡∏à‡∏∏‡∏•","‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡πÄ‡∏Ñ‡∏°‡∏µ","‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏à‡∏∏‡∏•","‡∏õ‡∏ô‡πÄ‡∏õ‡∏∑‡πâ‡∏≠‡∏ô","‡∏û‡∏±‡∏í‡∏ô‡∏≤","‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ú‡∏™‡∏°‡∏¢‡∏≤","‡∏™‡∏°‡∏∏‡∏ô‡πÑ‡∏û‡∏£","‡∏á‡∏≤‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‡πÜ"];
        
        const wasteTypes = [
            {value:"Hydrocarbon",label:"Hydrocarbon",desc:"H ‡πÅ‡∏•‡∏∞ C ‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö (Methanol, Acetone)"},
            {value:"Halogen",label:"Halogen",desc:"‡∏°‡∏µ‡∏ò‡∏≤‡∏ï‡∏∏ Cl, Br, I, F (NaCl, CH2Cl2)"},
            {value:"Inorganic",label:"Inorganic",desc:"Carbonate, Sulphate, Phosphate (K2CO3)"},
            {value:"Heavy Metal",label:"Heavy Metal",desc:"‡∏°‡∏µ‡πÇ‡∏•‡∏´‡∏∞‡∏´‡∏ô‡∏±‡∏Å (FeSO4, PbCl2)"},
            {value:"High Toxic",label:"High Toxic",desc:"‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏¥‡∏©‡∏™‡∏π‡∏á ‡∏Å‡πà‡∏≠‡∏°‡∏∞‡πÄ‡∏£‡πá‡∏á (Chloroform)"},
            {value:"Acid",label:"Acid",desc:"pH ‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤ 7"},
            {value:"Base",label:"Base",desc:"pH ‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤ 7"},
            {value:"Oxidizing",label:"Oxidizing",desc:"‡∏£‡∏±‡∏ö‡∏≠‡∏¥‡πÄ‡∏•‡πá‡∏Å‡∏ï‡∏£‡∏≠‡∏ô (KMnO4, H2O2)"},
            {value:"Reducing",label:"Reducing",desc:"‡πÉ‡∏´‡πâ‡∏≠‡∏¥‡πÄ‡∏•‡πá‡∏Å‡∏ï‡∏£‡∏≠‡∏ô (LiAlH4, NaBH4)"},
            {value:"Unknown",label:"Unknown",desc:"‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏ä‡∏ô‡∏¥‡∏î‡∏™‡∏≤‡∏£‡πÄ‡∏Ñ‡∏°‡∏µ"},
            {value:"Solid",label:"Solid",desc:"‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡πÅ‡∏Ç‡πá‡∏á"}
        ];
        
        const storageLocations = ["‡∏ä‡∏±‡πâ‡∏ô‡∏ß‡∏≤‡∏á waste ‡∏ö‡∏£‡∏¥‡πÄ‡∏ß‡∏ì‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏Ñ‡∏°‡∏µ / ‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£‡∏™‡∏ï‡∏™. 2","‡πÉ‡∏ï‡πâ‡∏ï‡∏π‡πâ‡∏î‡∏π‡∏î‡∏Ñ‡∏ß‡∏±‡∏ô","‡πÉ‡∏ï‡πâ‡πÇ‡∏ï‡πä‡∏∞‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° lab"];

        let currentStep = 1;
        const totalSteps = 9;
        const formData = {};

        document.addEventListener('DOMContentLoaded', () => {
            renderOptions('nameOptions', names);
            renderOptions('workOptions', works);
            renderWasteTypeOptions();
            renderOptions('storageOptions', storageLocations);
            populateVolumeSelect();
            
            document.getElementById('nextBtn').addEventListener('click', handleNext);
            document.getElementById('prevBtn').addEventListener('click', handlePrev);
            document.getElementById('experimentSelect').addEventListener('change', handleExperimentChange);
        });

        function renderOptions(containerId, options) {
            const container = document.getElementById(containerId);
            container.innerHTML = options.map(option => `
                <div class="option" onclick="selectOption(this, '${containerId}', '${option.replace(/'/g, "\\'")}')">
                    <div class="option-radio"></div>
                    <span>${option}</span>
                </div>
            `).join('');
        }

        function renderWasteTypeOptions() {
            const container = document.getElementById('wasteTypeOptions');
            container.innerHTML = wasteTypes.map(type => `
                <div class="option" onclick="selectOption(this, 'wasteTypeOptions', '${type.value}')">
                    <div style="display: flex; align-items: flex-start; gap: 12px; width: 100%;">
                        <div class="option-radio" style="margin-top: 2px;"></div>
                        <div style="flex: 1;">
                            <div style="font-weight: 600;">${type.label}</div>
                            <div class="waste-desc">${type.desc}</div>
                        </div>
                    </div>
                </div>
            `).join('');
        }

        function populateVolumeSelect() {
            const select = document.getElementById('volumeSelect');
            for (let i = 100; i <= 4000; i += 100) {
                const option = document.createElement('option');
                option.value = `${i} mL`;
                option.textContent = `${i} mL`;
                select.appendChild(option);
            }
            const barrel = document.createElement('option');
            barrel.value = '‡∏ñ‡∏±‡∏á 20 L';
            barrel.textContent = '‡∏ñ‡∏±‡∏á 20 L';
            select.appendChild(barrel);
        }

        function selectOption(element, containerId, value) {
            const container = document.getElementById(containerId);
            container.querySelectorAll('.option').forEach(opt => opt.classList.remove('selected'));
            element.classList.add('selected');
            
            const stepMapping = {
                'nameOptions': 'name',
                'workOptions': 'work',
                'wasteTypeOptions': 'wasteType',
                'storageOptions': 'storage'
            };
            
            formData[stepMapping[containerId]] = value;
        }

        function handleExperimentChange(e) {
            const otherInput = document.getElementById('experimentOther');
            if (e.target.value === '‡∏≠‡∏∑‡πà‡∏ô‡πÜ') {
                otherInput.style.display = 'block';
            } else {
                otherInput.style.display = 'none';
            }
        }

        function validateCurrentStep() {
            switch(currentStep) {
                case 1: return !!formData.name;
                case 2: return !!formData.work;
                case 3: return !!formData.wasteType;
                case 4: 
                    const expSelect = document.getElementById('experimentSelect').value;
                    if (!expSelect) return false;
                    if (expSelect === '‡∏≠‡∏∑‡πà‡∏ô‡πÜ') {
                        const otherValue = document.getElementById('experimentOther').value.trim();
                        if (otherValue) {
                            formData.experiment = otherValue;
                            return true;
                        }
                        return false;
                    }
                    formData.experiment = expSelect;
                    return true;
                case 5:
                    const chemName = document.getElementById('chemicalName').value.trim();
                    if (chemName) {
                        formData.chemicalName = chemName;
                        return true;
                    }
                    return false;
                case 6:
                    const volume = document.getElementById('volumeSelect').value;
                    if (volume) {
                        formData.volume = volume;
                        return true;
                    }
                    return false;
                case 7:
                    formData.bottleId = document.getElementById('bottleId').value.trim();
                    return true;
                case 8: return !!formData.storage;
                case 9:
                    formData.suggestion = document.getElementById('suggestion').value.trim();
                    return true;
                default: return false;
            }
        }

        function handleNext() {
            if (!validateCurrentStep()) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô');
                return;
            }

            if (currentStep < totalSteps) {
                currentStep++;
                updateUI();
            } else {
                submitForm();
            }
        }

        function handlePrev() {
            if (currentStep > 1) {
                currentStep--;
                updateUI();
            }
        }

        function updateUI() {
            document.querySelectorAll('.question').forEach(q => {
                q.classList.remove('active');
            });
            document.querySelector(`[data-step="${currentStep}"]`).classList.add('active');

            const progress = (currentStep / totalSteps) * 100;
            document.getElementById('progressBar').style.width = `${progress}%`;
            document.getElementById('progressText').textContent = `‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà ${currentStep} ‡∏à‡∏≤‡∏Å ${totalSteps}`;

            document.getElementById('prevBtn').style.display = currentStep > 1 ? 'block' : 'none';
            document.getElementById('nextBtn').textContent = currentStep === totalSteps ? '‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• üéØ' : '‡∏ñ‡∏±‡∏î‡πÑ‡∏õ ‚Üí';
        }

        function submitForm() {
            formData.timestamp = new Date().toLocaleString('th-TH');
            console.log('Form Data:', formData);
            
            document.getElementById('mainContent').style.display = 'none';
            document.getElementById('successScreen').classList.add('active');
        }
    </script>
</body>
</html>
